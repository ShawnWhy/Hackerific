// First, we'll need to capture microphone input
navigator.mediaDevices.getUserMedia({ audio: true })
  .then(processStream)
  .catch((err) => { console.error('Oh sweetie, there was an error: ' + err); });

function processStream(stream) {
  const audioContext = new (window.AudioContext || window.webkitAudioContext)();
  const analyser = audioContext.createAnalyser();
  const microphone = audioContext.createMediaStreamSource(stream);
  const javascriptNode = audioContext.createScriptProcessor(2048, 1, 1);

  analyser.fftSize = 2048;
  microphone.connect(analyser);
  analyser.connect(javascriptNode);
  javascriptNode.connect(audioContext.destination);

  // Now, we prepare our C Major scale
  const C_MAJOR_SCALE = ['C', 'D', 'E', 'F', 'G', 'A', 'B'];
  const FREQUENCIES = {
    'C': 261.63,
    'D': 293.66,
    'E': 329.63,
    'F': 349.23,
    'G': 392.00,
    'A': 440.00,
    'B': 493.88
  };

  javascriptNode.onaudioprocess = () => {
    const array = new Uint8Array(analyser.frequencyBinCount);
    analyser.getByteFrequencyData(array);
    let currentFrequency = calculateFrequency(array, audioContext.sampleRate);

    let differenceHash = {};
    for(let note in FREQUENCIES) {
      differenceHash[Math.abs(currentFrequency - FREQUENCIES[note])] = note;
    }
    
    let smallestDiff = Math.min.apply(null, Object.keys(differenceHash));
    console.log('Oh darling, you're closest to singing in ' + differenceHash[smallestDiff]);
  };
}

function calculateFrequency(array, sampleRate) {
  let maxIndex = -1;
  let maxAmplitude = -Infinity;

  for (let i = 0; i < array.length; i++) {
    if (array[i] >= maxAmplitude) {
      maxAmplitude = array[i];
      maxIndex = i;
    }
  }

  return maxIndex * (sampleRate / (2 * array.length));
}